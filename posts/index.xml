<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on The Weekly Arxiv</title><link>https://weeklyarxiv.github.io/posts/</link><description>Recent content in Posts on The Weekly Arxiv</description><generator>Hugo -- 0.134.3</generator><language>en-us</language><lastBuildDate>Fri, 20 Dec 2024 20:33:41 +0530</lastBuildDate><atom:link href="https://weeklyarxiv.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to Docker and Containerization</title><link>https://weeklyarxiv.github.io/posts/introduction-to-docker/</link><pubDate>Fri, 20 Dec 2024 20:33:41 +0530</pubDate><guid>https://weeklyarxiv.github.io/posts/introduction-to-docker/</guid><description>&lt;h2 id="introduction-to-containerization">Introduction to Containerization&lt;/h2>
&lt;h3 id="definition-and-concept">Definition and Concept&lt;/h3>
&lt;p>Containerization is a lightweight and portable way to deploy applications, ensuring that they run consistently across different environments. Unlike virtualization, which involves running multiple virtual machines (VMs) on a single physical server, each with its own operating system, containerization shares the host systemâ€™s OS kernel. This approach makes containers lighter, faster, and more efficient in resource utilization.&lt;/p>
&lt;h3 id="history-and-evolution">History and Evolution&lt;/h3>
&lt;p>Containerization has its roots in the early 2000s with the introduction of Linux containers (LXC). However, it wasn&amp;rsquo;t until the release of Docker in 2013 that containerization gained widespread adoption. Docker simplified the process of creating, deploying, and managing containers, making it a cornerstone of modern application development and deployment.&lt;/p></description></item><item><title>Basic Docker Commands</title><link>https://weeklyarxiv.github.io/posts/basic-docker-commands/</link><pubDate>Fri, 20 Dec 2024 15:47:32 +0530</pubDate><guid>https://weeklyarxiv.github.io/posts/basic-docker-commands/</guid><description>&lt;p>Docker and Docker Compose are powerful tools for containerization and orchestration, simplifying the process of developing, deploying, and managing applications. Here is a detailed guide to the various commands you will need to manage your Docker and Docker Compose environments.&lt;/p>
&lt;h3 id="docker-management-commands">Docker Management Commands&lt;/h3>
&lt;p>These commands are essential for managing and understanding your Docker setup.&lt;/p>
&lt;h4 id="general-commands">General Commands&lt;/h4>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>&lt;code>docker --help&lt;/code>&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Displays help for the Docker CLI and its subcommands. This is a great starting point if you need to understand the available commands and their options.&lt;/li>
&lt;li>Example: &lt;code>docker --help&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;code>docker -d&lt;/code>&lt;/strong>:&lt;/p></description></item><item><title>How To Install Docker on Ubuntu, Windows, and macOS: A Comprehensive Guide</title><link>https://weeklyarxiv.github.io/posts/how-to-install-docker/</link><pubDate>Fri, 20 Dec 2024 15:47:32 +0530</pubDate><guid>https://weeklyarxiv.github.io/posts/how-to-install-docker/</guid><description>Master containerized applications with Docker on Linux, Windows &amp;amp; MacOS. Work effectively with images, containers, and Docker repositories.</description></item></channel></rss>